There are a lot of arithmetic types

0 is interpreted as False
All non-zero values are interpreted as True
21 //True
!37 //False



The Four Laws of Programs

- Programs must work correctly

- Programs must be readable, 
    provided this does not conflict with the previous law.

- Programs must be compact,
    provided this does not conflict with the previous laws.

- Programs must be efficient,
    provided this does not conflict with the previous laws.








Increment and decrement operators

n++; // means n = n + 1
++n; // means n = n + 1
n += 1; // means n = n + 1

n--; // means n = n - 1
--n; // means n = n - 1
n -= 1; // means n = n - 1




Passing by values
- if a variable is passed by value into the argument variable, its value is copied 
and the copy is only available for the scope of the function.
- Any changes made to the argument variable have no effect on the origional variable

Passing by reference
- Array arguments are passed by reference
-The argument variable is made to refer to the origional array, 
because copying a larage array would be expensive.
- This means that if the function changes any elements of the array, 
those changes are seen on the origional. 